@model Task01.Models.CreateProductViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Creating product</title>
    @Styles.Render("~/Content/css")
</head>
<body>
    <div>
        @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-link col-md-offset-1" })
    </div>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("orderID", ViewBag.OrderID as int?)
        <div class="form-horizontal">
            <h4>Creating product</h4>
            <hr />
            if (ViewBag.ErrorMessage != null)
            {
            <div class="alert alert-danger col-md-2">
                @Html.Label(ViewBag.ErrorMessage as string)
            </div>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="button" value="Save" class="btn btn-primary" />
                    <input type="submit" name="button" value="Cancel" class="btn btn-secondary" />
                </div>
            </div>
        </div>
    }
</body>
</html>

@model Task01.Models.OrderDetailsViewModel

@{
    Layout = null;
    var products = Model.Products;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Order Details</title>
    @Styles.Render("~/Content/css")
</head>
<body>
    <div>
        @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-link col-md-offset-1" })
    </div>
    <div class="table table-hover table-condensed">
        @Html.DisplayForModel()
    </div>
    @if (Model.Products != null)
    {
    <table class="table table-hover table-condensed">
        <tr>
            <th>
                @Html.DisplayName("ProductID")
            </th>
            <th>
                @Html.DisplayName("ProductName")
            </th>
            <th>
                @Html.DisplayName("UnitPrice")
            </th>
            <th>
                @Html.DisplayName("Quantity")
            </th>
            <th>
                @Html.DisplayName("Discount")
            </th>
            <th>
                @Html.DisplayName("ExtendedPrice")
            </th>
        </tr>

        @foreach (var item in products)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExtendedPrice)
            </td>
        </tr>
        }
    </table>
    } else

    {
        @:There are not order details.
    }
</body>
</html>
